    该篇论文是根据Nested Kernel的架构方式实现了一个Nexen，将原先的xen通过分解成xen slices、shared service、secure monitor三个部分来保证分解之后的xen有更强的安全性。指出了xen中存在的主要安全问题是在hypervisor中而不是在于dom0。
    将xen分解为xen slices（包含在其上运行的guestVM）、shared service和secure monitor的这种做法我认为是本文最大的亮点，他结合了Cloudvisor、Xoar等不同类型xen的优点。Cloudvisor通过将Dom0和Xen都放在了non-root模式来强制他们在执行特权指令时需要陷入cloudvisor中进行安全检查，以此来保证其执行特权指令的同时不会影响宿主操作系统和其他虚拟机；而Xoar则是将Dom0按照其功能分解为7个部分，以此来保证错误隔离和减少容易被攻击的接口。
    Deconstructing Xen采用类似的方式来实现其安全的目标，他通过对每一个VM配置了一个Xen slices来保证VM在调用一些相对比较安全的功能接口时可以不需要每次都进行安全检查提升效率，该Xen slice也类似于一个沙盒，可以有效的防止运行在其上的VM影响到其他的VM；他还通过一个shared service提供给上层的一些虚拟机大部分需要用到的需要安全检查的常用接口，以保证一定的效率（且由于把所有的接口都放在Xen slice中是不合适的，因为这样会造成很多Xen slice中的功能重复）；Deconstructing Xen通过对mmu的修改来达到对只读、私人数据的保护，并设置了一个页表来记录相关的可操作的权限，为了保证该机制能够顺利运行，Deconstructing Xen最后通过一个secure monitor来对一些不合理的修改映射页表的行为进行监控，判断该修改是否合法来保证数据的安全。
    本文很新颖的采用分解的方式将原先的Xen分成几个部分，他保证安全的方式不是直接将Xen置于ring0的指令级别权限中，而是通过将Xen中的几个部分按照功能分成不同组件，对每个组件赋予他所需要的权限，使每个组件都能够在他需要的最小权限中进行执行，可以减少攻击者利用一些本身需要权限较小的接口来滥用属于整个组件的权限，以此来达到攻击目的。
