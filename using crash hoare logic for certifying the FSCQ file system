---------summary---------
FSCQ是第一个使用Coq辅助定理证明器实现机器检查的定理证明的一个文件系统，该系统的实现详细说明里说明了其能够在不丢失数据的前提下，在任意情况下的系统崩溃后将文件系统恢复。而该论文的重点就在于证明FSCQ的说明是正确的，它能够在任意情况的系统崩溃中将文件系统恢复。作者使用了CHL也就是Crash Hoare Logic这个工具，该工具是在传统的Hoare Logic中扩展了系统崩溃的情况、恢复的过程和为了在不同抽象等级下对不同磁盘情况进行记录的逻辑地址空间。
作者所提供的这种CHL的辅助定理证明能够减少开发者在验证系统需要的工作量，并且能够提供他们在验证过程中的自动化验证工具。虽然作者提供的这种CHL工具的实现较简单，但他提供的这种将FSCQ运行于用户态的工具经过实验证明将在其上运行Unix应用程序是非常有效的，且提供了较好的性能。
CHL提供了开发者通过写一些specification来使用CHL来证明这些specification是否能够正确运行在FSCQ这类储存系统上，他可以用来自动检测一个文件系统的实现是否是正确的。由于文件系统会因为不一样的用例、状态而崩溃，所以它支持开发者指定状态或者回复到上个状态来对一次崩溃的原因做反复的自动化验证，并且支持异步写磁盘的状态回复。
CHL通过类似事务的方式来实现保证状态的一致，他使操作能够通过事务绑定的方式进行原子性执行，这样可以防止文件系统不会因为写磁盘的操作每次的执行顺序不同而导致的状态不统一，当需要进行状态的回滚时，只需将原来的事务序列重新执行即可恢复到当时的状态。CHL也允许开发者编写自己需要的状态，比如说一个在系统崩溃前的状态。CHL通过孤立的逻辑方式来完成这项功能，开发者可以使用CHL的提供的方式对磁盘状态进行描述，且CHL的磁盘模型支持同步的操作，它通过等待确保只有下一个写入的值被写入磁盘后才会丢弃上一个需写入的值，它能够保证将状态停留在开发者需要进行测试的状态。开发者经常需要对一个文件系统在不同的抽象等级中对其进行断言，CHL为了解决开发者在断言时的繁琐，使用了引入了新的地址空间来表示逻辑磁盘，提供比如说一个文件这种高抽象层次表示，来减少开发者在细节上的繁琐。
CHL的验证以以下2个步骤进行：
	1.将需证明的定理转化为一系列的证明责任（proof obligation）并在下一阶段进行证明，CHL将初始化于一个给定的开始状态进行证明。
	2.有些产生于1的证明是不必要的，CHL将相同的前置条件的操作放在一起进行证明，然后对于一些较复杂的用例，CHL将中间信息从前置条件传送到后置条件中，并依赖与前文提到的孤立的逻辑方式来证明由步骤1所提出的obligation。
经过最后一个章节的实验证明表示，FSCQ完全能够应付一般的软件开发，比如说运行一个邮件服务器。FSCQ也能够有效的从崩溃中恢复过来，在实验中通过两个方式来测试FSCQ在崩溃后的恢复能力，第一个方式是通过随机运行文件系统的指令，在这个
---------comment---------
